// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])

}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id String @id @default(uuid())
  name String?
  business_name String?
  email String? @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  business_state String?
  business_city String?
  business_street String?
  business_zip String?
  url String?
  phone_number String?
  personal_number String?
  requests Request[]
  inventory Listing[]
  offers_sent Offer[]
  shipping_state String?
  shipping_city String?
  shipping_street String?
  shipping_zip String?
  accounts      Account[]
  sessions      Session[]


  @@index([email, business_name])
  @@index([business_state, business_zip])
}

model Request {
  id String @id @default(uuid())
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  date_created DateTime @default(now())
  date_expires DateTime
  isbn String?
  condition String?
  format String?
  title String
  author String
  offers Offer[]

  @@index([date_expires])
  @@index([date_created])
  @@index([title, author])
  @@index([isbn])

}

model Listing {
  id String @id @default(uuid())
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  date_listed DateTime @default(now())
  sku String?
  title String
  isbn String?
  author String
  condition String?
  format String?
  notes String?
  price Decimal @db.Money
  free_shipping Boolean
  shipping_price Decimal @db.Money
  offers Offer[]

  @@index([date_listed])
  @@index([title, author])
  @@index([isbn])

}


model Offer {
  id String @id @default(uuid())
  sender User @relation(fields: [senderId], references: [id])
  senderId String
  listing Listing? @relation(fields: [listingId], references: [id])
  listingId String?
  request Request? @relation(fields: [requestId], references: [id])
  requestId String?
  date_created DateTime @default(now())
  price Decimal? @db.Money
  condition String?
  format String?

  @@index([senderId])
}